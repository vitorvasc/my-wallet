services:
  account-balance-service:
    build: ./account-balance-service
    container_name: account-balance-service
    environment: 
      PG_HOST: host.docker.internal
      PG_PORT: 5432
      PG_USERNAME: postgres
      PG_PASSWORD: postgres
      PG_DBNAME: postgres
      KAFKA_BROKER: host.docker.internal:9092
    ports: 
      - "8080:8080"
    depends_on:
      - postgres
      - kafka
    networks:
      - my-wallet

  transactions-service:
    build: ./transactions-service
    container_name: transactions-service
    ports: 
      - "8081:8081"
    depends_on:
      - mongo
    networks:
      - my-wallet

  mongo:
    image: mongo:latest
    container_name: mongo
    ports: 
      - "27017:27017"
    networks:
      - my-wallet

  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - ./.init/pg-init.sql:/docker-entrypoint-initdb.d/init.sql
      - pgdata:/var/lib/postgresql/data
    networks:
      - my-wallet
      
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
    networks:
      - my-wallet

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://host.docker.internal:9092
      KAFKA_ZOOKEEPER_CONNECT: host.docker.internal:2181
    networks:
      - my-wallet
    depends_on:
      - zookeeper

  kafka-topics-generator:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - kafka
    command: >
      bash -c "
        sleep 5s &&
        kafka-topics --create --topic=users.account-balance-accreditations --if-not-exists --bootstrap-server=host.docker.internal:9092
      "
    networks:
      - my-wallet
  
  prometheus: 
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    command: 
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./.init/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - my-wallet

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    environment:
      GF_AUTH_DISABLE_LOGIN_FORM: true
      GF_AUTH_ANONYMOUS_ENABLED: true
      GF_AUTH_ANONYMOUS_ORG_ROLE: Admin
    volumes:
      - ./.init/provisioning:/etc/grafana/provisioning
      - ./.init/grafana.ini:/etc/grafana/grafana.ini
    networks:
      - my-wallet

volumes:
  pgdata:

networks:
  my-wallet:
    driver: bridge