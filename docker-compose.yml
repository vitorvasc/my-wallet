services:
  account-balance-service:
    build: ./account-balance-service
    environment: 
      PG_HOST: postgres
      PG_PORT: 5432
      PG_USERNAME: postgres
      PG_PASSWORD: postgres
      PG_DBNAME: postgres
    ports: 
      - "8080:8080"
    depends_on:
      - postgres
      - kafka

  transactions-service:
    build: ./transactions-service
    ports: 
      - "8081:8081"
    depends_on:
      - mongo

  mongo:
    image: mongo:latest
    ports: 
      - "27017:27017"

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - ./.init/pg-init.sql:/docker-entrypoint-initdb.d/init.sql
      - pgdata:/var/lib/postgresql/data

  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092

  kafka-topics-generator:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - kafka
    command: >
      bash -c "
        sleep 5s &&
        kafka-topics --create --topic=users.account-balance-accreditations --if-not-exists --bootstrap-server=kafka:9092
      "
  
  prometheus: 
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    command: 
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./.init/prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    environment:
      GF_AUTH_DISABLE_LOGIN_FORM: true
      GF_AUTH_ANONYMOUS_ENABLED: true
      GF_AUTH_ANONYMOUS_ORG_ROLE: Admin
    volumes:
      - ./.init/provisioning:/etc/grafana/provisioning

volumes:
  pgdata: